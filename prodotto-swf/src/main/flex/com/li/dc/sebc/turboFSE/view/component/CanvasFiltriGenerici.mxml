<?xml version="1.0" encoding="utf-8"?>
<CanvasFSE  xmlns="com.li.dc.sebc.turboFSE.view.component.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml"  >
	<mx:Metadata>
		[Event(name="filterSelect", type="com.li.dc.sebc.turboFSE.events.TurboEvent")]
		[Event(name="filterDeselect", type="com.li.dc.sebc.turboFSE.events.TurboEvent")]
		[Event(name="resetEvent", type="com.li.dc.sebc.turboFSE.events.TurboEvent")]
	</mx:Metadata>
	<mx:Script>
		<![CDATA[
			import it.lispa.siss.sebc.flex.debug.Debug;
			import com.li.dc.sebc.turboFSE.events.ToggleEvent;
			import com.li.dc.sebc.turboFSE.events.MessageEvent;
			import com.li.dc.sebc.turboFSE.model.filters.ManagerFilters;
			import mx.core.UIComponent;
			import com.li.dc.sebc.turboFSE.events.SelectItems;
			import com.li.dc.sebc.turboFSE.events.TurboEvent;
			//========================================================
			 
			private var maxBoxWidth:Number 		= 750;
			private var maxBoxHeight:Number 	= 230;
			private var durationMoveBox:Number 	= 250;
			//
			private var minBoxWidth:Number 		= 100;
			private var minBoxHeight:Number 	= 100;
			private var initPoint:Point;
			private var curParent:UIComponent;
			private var curOpenBox:ResizableBoxFiltri;
		 	//===========================================================
			// Ente
			[Bindable]public var labelEnte:String	= "Ente";
			[Bindable]public var listDataEnte:Object; // tipoEnte
			//=========================================================== l 
			// Disciplina Erogazione
			[Bindable]public var labelDisciplina:String	= "Disciplina Erogazione";
			[Bindable]public var listDataDisciplina:Object; // tipoErogazione
			//=========================================================== l 
			// Tipo Folder
			[Bindable]public var labelTipoFolder:String	= "Tipo Folder";
			[Bindable]public var listDataTipoFolder:Object; // tipoFolder 
			//=========================================================== l 
			// Presidio
			[Bindable]public var labelPresidio:String	= "Tipo Presidio";
			[Bindable]public var listDataPresidio:Object; // tipoPresidio 
			//=========================================================== 
			[Bindable]public var testoArea:String		= ""; 
			//===========================================================
		 	/* Il reset mette il canvasFiltriGenerici nella situazione di partenza */
			public override function reset():void
			{
				closeAll();
				this.dispatchEvent( new TurboEvent( TurboEvent.RESET_EVENT ) );
			}
			public function closeAll():void
			{
				erogazione.reset();
				folder.reset();
				presidio.reset();
				ente.reset();
				if(curOpenBox!=null)
				{
					curOpenBox.resetBtn();
					closeBox( curOpenBox );
				}
			}
			//////////////////////////////////////////////////////////////////////
			//////////////////////////////////////////////////////////////////////
			//////////////////////////////////////////////////////////////////////
			private function onToggleEvent(event:ToggleEvent):void
			{
				var target:ResizableBoxFiltri = event.target as ResizableBoxFiltri;
				if(event.selected)
				{
					curOpenBox = target;
					openBox(target);	
				}else
				{
					curOpenBox = null;
					closeBox(target,durationMoveBox);
				}
			}
			private function openBox(box:ResizableBoxFiltri):void
			{
				minBoxWidth 	= box.width;
				minBoxHeight 	= box.height;
				/* Conservo il punto iniziale */
				initPoint = new Point(box.x,box.y);
				/* le coordinate in locale */
				var point:Point = new Point(box.x,box.y);
				point = box.parent.localToGlobal(point);
				point = this.globalToLocal(point);
				curParent = box.parent as UIComponent;
				curParent.removeChild( box );
				box.x = point.x;
				box.y = point.y; 
				box.filters = [new DropShadowFilter(4,45,0,0.8)];
				this.addChild( box );
				var ww:Number = this.width - 10;
				var hh:Number = this.height - 10;
				box.resizeBoxAndMove(0,0,ww,hh,durationMoveBox);
			}
			private function closeBox(box:ResizableBoxFiltri,duration:Number=0):void
			{				
				Debug.logDebug("closeBox duration :: "+duration);
				var point:Point = initPoint.clone();
				/* Devo riconvertirle in coordinate del parent */
				point = curParent.localToGlobal( point );
				point = this.globalToLocal(point);
				box.resizeBoxAndMove(point.x,point.y,minBoxWidth,minBoxHeight,duration);
			}
			//
			private function onPositionBegins(event:Event):void
			{
				var box:ResizableBoxFiltri = event.target as ResizableBoxFiltri;
				box.filters = [];
				var prnt:UIComponent = box.parent as UIComponent;
				prnt.removeChild( box );
				box.x = initPoint.x;
				box.y = initPoint.y;
				Debug.logDebug("onPositionBegins  Ã¨ finito l'effetto :box-> x : "+box.x+", y : "+box.y);
				curParent.addChild( box );
				curOpenBox = null;
			}
		]]>
	</mx:Script>
	
	<mx:VBox backgroundAlpha="0" width="100%" height="100%" paddingLeft="4" paddingRight="4">
		<mx:Grid backgroundAlpha="0" x="0" y="0" height="100%" width="100%" 
			paddingBottom="4" paddingLeft="4" paddingRight="4" paddingTop="4"
			verticalGap="4" horizontalGap="4" >
			<mx:GridRow width="100%" height="100%"  >
				<mx:GridItem width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
					<ResizableBoxFiltri 
						id="ente"
						toggleEvent="onToggleEvent(event);"
						label="{labelEnte}" 
						multiSelection="true"
						listData="{listDataEnte}"
						width="100%" 
						positionBegins="onPositionBegins(event);"/>
				</mx:GridItem>
				<mx:GridItem width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">
					<ResizableBoxFiltri 
						id="erogazione"
						toggleEvent="onToggleEvent(event);" 
						label="{labelDisciplina}" 
						multiSelection="true"
						listData="{listDataDisciplina}"
						width="100%" 
						positionBegins="onPositionBegins(event);"/>
				</mx:GridItem>
			</mx:GridRow>
			<mx:GridRow width="100%" height="100%" >
				<mx:GridItem width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">
					<ResizableBoxFiltri 
						id="folder"
						label="{labelTipoFolder}" 
						toggleEvent="onToggleEvent(event);" 
						multiSelection="true"
						listData="{listDataTipoFolder}"
						width="100%" 
						positionBegins="onPositionBegins(event);"/>
				</mx:GridItem>
				<mx:GridItem width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">
					<ResizableBoxFiltri 
						id="presidio"
						label="{labelPresidio}" 
						toggleEvent="onToggleEvent(event);" 
						multiSelection="true"
						listData="{listDataPresidio}"
						width="100%" 
					 	positionBegins="onPositionBegins(event);"/>
				</mx:GridItem>
			</mx:GridRow>
		</mx:Grid>
		<mx:TextArea 
			selectable="true"
			editable="false"
			textAlign="left"
			width="100%" 
			height="100%" 
			htmlText="{testoArea}"
			borderStyle="none"
			focusEnabled="false"
			focusAlpha="0"/>
	</mx:VBox>
</CanvasFSE>
