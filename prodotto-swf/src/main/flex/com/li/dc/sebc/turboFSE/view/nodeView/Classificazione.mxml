<?xml version="1.0" encoding="utf-8"?>
<CanvasFSE xmlns="com.li.dc.sebc.turboFSE.view.component.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%">
	<mx:Script>
		<![CDATA[
			import mx.controls.Spacer;
			import mx.containers.HBox;
			import mx.controls.Label;
			import it.lispa.siss.sebc.middleground.entity.DatoCodificato;
			import com.li.dc.sebc.turboFSE.view.component.LabelValue;
			import it.lispa.siss.sebc.middleground.entity.Categoria;
			import mx.containers.VBox;
			import it.lispa.siss.sebc.flex.collection.ArrayIterator;
			import it.lispa.siss.sebc.flex.collection.IIterator;
			//-------------------------------------------------------------------------
			[Bindable]public var txtArea:String 		= "Nessuna classificazione presente";
			[Bindable]public var lblValue:String 		= "";
			[Bindable]public var txtSelectable:Boolean 	= false;
			[Bindable]public var txtEditable:Boolean 	= false;
			private var box:VBox;
			public function update(categorie:Array):void
			{
				if(box!=null)
				{
					clearCategorie();
					var iter:IIterator = new ArrayIterator(categorie);
					while(iter.hasNext())
					{
						var categoria:Categoria = iter.next() as Categoria;
						if(categoria.categoria!=null && categoria.categoria.descrizione!=null && categoria.categoria.descrizione.length>0)
						{
							addCategoria(categoria.categoria.descrizione);
							
							if(categoria.elencoSottoCategorie!=null && categoria.elencoSottoCategorie.length>0)
							{
								addSottocategorie(categoria.elencoSottoCategorie.toArray());
							}
							addRule();
						}
					}	
				}
			}
			private function clearCategorie():void
			{
				for(var i:uint = 0;i<box.numChildren;i++)
				{
					box.removeChildAt( i );
				}
			}
			private function addSpacer(sp:Number = 15):void
			{
				var spacer:Spacer = new Spacer();
				spacer.height	= sp;
				box.addChild( spacer );
			} 
			 
			private function addSottocategorie(elencoSottoCategorie:Array):void
			{
				var iter:IIterator = new ArrayIterator(elencoSottoCategorie);
				while(iter.hasNext())
				{
					var sotto:DatoCodificato = iter.next() as DatoCodificato;
					if(sotto.descrizione!=null && sotto.descrizione.length>0)
					{
						var sp:Spacer 		= new Spacer();
						sp.percentWidth 	= 10;
						//--	
						var hbox:HBox 		= new HBox();
						hbox.percentWidth 	= 100;
						hbox.addChild( sp );
						//--
						var label:Label		 = new Label();
						label.selectable	 = true;
						label.setStyle("color",0);
						label.setStyle("fontSize",12);
						label.text 			= sotto.descrizione; 
						//--
						hbox.addChild( label );
						box.addChild( hbox );	
					}
				}
			}
			private function addRule(perc:int = 100):void
			{
				var hrule:HRule = new HRule();
				hrule.height = 4;
				hrule.percentWidth = perc;
				box.addChild( hrule );
			} 
			private function addCategoria(desc:String):void
			{
				var labCat:LabelValue 	= new LabelValue();
				labCat.labelText		= "Categoria";
				labCat.labelValue		= desc;
				labCat.percentWidth		= 100;
				labCat.percentHeight	= 100;
				box.addChild( labCat );
				addSpacer(10);
			}
		]]>
	</mx:Script>
	<mx:VBox 
		width="100%" height="100%" verticalGap="0" 
		paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" 
		backgroundAlpha="0" verticalScrollPolicy="off" horizontalScrollPolicy="off">
		
		 	<mx:TextArea text="{txtArea}" 
		 		borderStyle="none" wordWrap="true" backgroundAlpha="0"
		 		width="100%" selectable="{txtSelectable}" editable="{txtEditable}" focusEnabled="true" fontSize="12"/>
		 		
		 		<mx:Spacer height="8"/>
		 		
		 		<LabelValue labelText="Data di Elaborazione" labelValue="{lblValue}" width="50%"/>
		 		
		 		<mx:HRule height="4" width="100%" />
		 		
			 	<mx:VBox width="100%" height="100%">
			 		<mx:addedToStage>
			 			<![CDATA[
			 				box = event.target as VBox;
			 			]]>
			 		</mx:addedToStage>
			 	</mx:VBox>
	</mx:VBox>
	
</CanvasFSE>
