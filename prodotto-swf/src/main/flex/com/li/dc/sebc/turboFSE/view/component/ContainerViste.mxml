<?xml version="1.0" encoding="utf-8"?>
<CanvasFSE xmlns="com.li.dc.sebc.turboFSE.view.component.*" 
	verticalScrollPolicy="on"  
	xmlns:mx="http://www.adobe.com/2006/mxml" initialize="init();" xmlns:mx1="org.efflex.mx.*">
	<mx:Script>
		<![CDATA[
			import it.lispa.siss.sebc.flex.debug.Debug;
			import com.li.dc.sebc.turboFSE.view.viste.Vista;
			/*
			import sandy.materials.BitmapMaterial;
			import sandy.materials.Material;
			import sandy.materials.attributes.LightAttributes;
			import sandy.materials.attributes.MaterialAttributes;
			import sandy.materials.Appearance;
			import sandy.core.scenegraph.Node;
			import sandy.primitive.Box;
			import sandy.core.scenegraph.Camera3D;
			*/
			import mx.effects.Effect;
			import mx.core.UIComponent;
			import mx.containers.VBox;
			import mx.events.ResizeEvent;
			import mx.effects.Fade;
			import mx.events.EffectEvent;
			
			
		 
			 
			//======================================
			private  var _oldVista:Vista 	= null;
			private  var box:VBox 			= null;
			private var _hideEffect:Effect;
			private var _showEffect:Effect;
			private  var _vista:Vista;
			 
			//======================================
			private function init():void
			{
				/*var cam:Camera3D 	= new Camera3D( 100, 100 ,45);
				cam.x				= 0;
				cam.y				= 0;
				cam.z				= -400;
				var group:Group 	= new Group("rootVista");
				var node:Box 		= new Box("vista",100,100,100);
				con
				group.addChild( node );
				
				var sprite:Sprite		= new Sprite();
				scena					= new Scene3D("scenaVista",sprite,cam,group);
         		
         		
         		group.appearance 		= new Appearance( material );
         		
				
				scena.light.setPower( 80 );
				scena.light.setDirection(0,0,120);*/
				
				//_container = new UIComponent();
				//this.addChild( _container );
			}
		/*	private function getAppearance(bit:BitmapData):Appearance
			{
				var materialAttr:MaterialAttributes = new MaterialAttributes(new LightAttributes( true, 0.1));
         		var material:Material 				= new BitmapMaterial(  bit , materialAttr);
				material.lightingEnable = true;
				return new Appearance( material ); 
			}
		*/	
			public function set hideEffect(eff:Effect):void
			{
				if(eff != _hideEffect)
				{
					_hideEffect.removeEventListener(EffectEvent.EFFECT_END,onEndHide);
					_hideEffect = eff;
					_hideEffect.duration = 300;
					_hideEffect.addEventListener(EffectEvent.EFFECT_END,onEndHide);
				}
			}
			public function set showEffect(eff:Effect):void
			{
				if(eff != _hideEffect)
				{
					_showEffect.removeEventListener(EffectEvent.EFFECT_END,onEndShow);
					_showEffect = eff;
					_showEffect.duration = 300;
					_showEffect.addEventListener(EffectEvent.EFFECT_END,onEndShow);
				}
			}
			private function onEndShow(e:EffectEvent):void
			{}
			private function onEndHide(e:EffectEvent):void
			{
				removeOldVista();
			}
			public function set currVista(value:Vista):void
			{
				if(_vista==value )return;
				try{
					_oldVista = _vista;
					_vista = value;
					addVista();
				}catch(e:Error)
				{
					Debug.logError("error : "+e.getStackTrace());
				}
			}
			public function get currVista():Vista 
			{
				return _vista;
			}
			private function addVista():void
			{
				if(_vista!=null)
				{
					addNextDirection( _vista );
				}else
				{
					clear();
				}
			}
			private function addPrevDirection(v:Vista):void
			{
			
			}
			private function addNextDirection(v:Vista):void
			{
				this.addChildAt(v,0);
				removeOldVista();
				this.invalidateDisplayList();
				this.invalidateSize();
			}
			private function onEndEffectShow(e:Event):void
			{
				
			}
			private function onEndEffectHide(e:Event):void
			{
			}
			
			 
			private function clear():void
			{
				this.currVista = new Vista();
				//removeOldVista();
			}
			
			private function removeOldVista():void
			{
				if(_oldVista!=null && this.contains(_oldVista) )
				{
					this.removeChild(_oldVista);
				}
				if(this.numChildren>1)
				{
					Debug.logError("ERROR : TROPPI FIGLI" );
					for(var i:uint = 0;i<this.numChildren;i++)
					{
						var child:DisplayObject = this.getChildAt(i) as DisplayObject;
						Debug.logError("ERROR : TROPPI FIGLI child " +child);
						if(child!=currVista)
						{
							this.removeChild( child );
						}
					}					
				}
			}
		]]>
	</mx:Script>
	 
	<!--<mx1:FlipPapervision3D direction="down" duration="1000" effectEnd="onEndEffect(event);" id="effect"/>
	<mx1:TileFade alphaTo="0" alphaFrom="1" duration="1000" effectEnd="onEndEffect(event);" id="effect" />-->
	<mx:WipeDown id="show" effectEnd="onEndEffectShow(event);" duration="500" />
	<mx:WipeUp id="hide" effectEnd="onEndEffectHide(event);" duration="500" />
</CanvasFSE>














