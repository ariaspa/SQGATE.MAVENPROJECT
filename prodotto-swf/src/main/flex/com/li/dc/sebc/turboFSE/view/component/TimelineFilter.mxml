<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="300" xmlns:component="com.li.dc.sebc.turboFSE.view.component.*">
	
	<mx:Metadata>
		[Event(name="filterSelect", type="com.li.dc.sebc.turboFSE.events.TurboEvent")]
		[Event(name="filterDeselect", type="com.li.dc.sebc.turboFSE.events.TurboEvent")]
		[Event(name="resetEvent", type="com.li.dc.sebc.turboFSE.events.TurboEvent")]
		[Event(name="TLFilterEvent", type="com.li.dc.sebc.turboFSE.events.TLFilterEvent")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import it.lispa.siss.sebc.flex.color.HTMLTabColor;
			import com.li.dc.sebc.turboFSE.events.TLFilterEvent;
			import com.li.dc.sebc.turboFSE.events.TurboEvent;
			import mx.core.UIComponent;
			import com.li.dc.sebc.turboFSE.events.ToggleEvent;
			 
			[Bindable] public var lab_tipologie_dati:String;//Tipologie Dati
			[Bindable] public var lab_tipologie_DCE:String;//Tipologie DCE
			[Bindable] public var lab_PDT:String;//PDT
			[Bindable] public var lab_farmaci:String;//Elenco Farmaci
			[Bindable] public var lab_discipline:String;//Elenco Discipline
			[Bindable] public var lab_prestazioni:String;//Elenco prestazioni
			 
			[Bindable] public var list_tipologie_dati:Array;//Tipologie Dati
			[Bindable] public var list_tipologie_DCE:Array;//Tipologie DCE
			[Bindable] public var list_PDT:Array;//PDT
			[Bindable] public var list_farmaci:Array;//Elenco Farmaci
			[Bindable] public var list_discipline:Array;//Elenco Discipline
			[Bindable] public var list_prestazione:Array;//Elenco prestazioni
			
			//////////////////////////////////////////////////////////////////////
			public var durationMoveBox:Number = 200;
			 
			//////////////////////////////////////////////////////////////////////
			private var curParent:UIComponent;
			private var curOpenBox:ResizableBoxFiltri;
			private var minBoxWidth:Number = 0;
			private var oldDepth:int;
			private var minBoxHeight:Number = 0;
			private var initPoint:Point;
			 
			//////////////////////////////////////////////////////////////////////
			private function onToggleEvent(event:ToggleEvent):void
			{
				var target:ResizableBoxFiltri = event.target as ResizableBoxFiltri;
				if(event.selected)
				{
					curOpenBox = target;
					openBox(target);	
				}else
				{
					curOpenBox = null;
					closeBox(target,durationMoveBox);
				}
			} 
			private function openBox(box:ResizableBoxFiltri):void
			{
				minBoxWidth 	= box.width;
				minBoxHeight 	= box.height;
				/* Conservo il punto iniziale */
				initPoint = new Point(box.x,box.y);
				/* le coordinate in locale */
				var point:Point = new Point(box.x,box.y);
				point = box.parent.localToGlobal(point);
				point = this.globalToLocal(point);
				curParent 	= box.parent as UIComponent;
				oldDepth	= curParent.getChildIndex(box);
				curParent.removeChild( box );
				box.x = point.x;
				box.y = point.y; 
				box.filters = [new DropShadowFilter(4,45,0,0.8)];
				this.addChild( box );
				var ww:Number = this.width -2;
				var hh:Number = this.height -2;
				box.resizeBoxAndMove(0,0,ww,hh,durationMoveBox);
			}
			private function closeBox(box:ResizableBoxFiltri,duration:Number=0):void
			{				
				var point:Point = initPoint.clone();
				/* Devo riconvertirle in coordinate del parent */
				point = curParent.localToGlobal( point );
				point = this.globalToLocal(point);
				box.resizeBoxAndMove(point.x,point.y,minBoxWidth,minBoxHeight,duration);
			}
			
			private function onPositionBegins(event:Event):void
			{
				var box:ResizableBoxFiltri = event.target as ResizableBoxFiltri;
				box.filters = [];
				var prnt:UIComponent = box.parent as UIComponent;
				prnt.removeChild( box );
				box.x = initPoint.x;
				box.y = initPoint.y; 
				curParent.addChildAt(box,oldDepth);
				//curParent.addChild( box );
				curOpenBox = null;
			}
			
			/* Il reset mette il canvasFiltriGenerici nella situazione di partenza */
			private function onClick(e:Event):void
			{
				reset();
			}
			public function reset():void
			{
				closeAll();
				this.dispatchEvent( new TurboEvent( TurboEvent.RESET_EVENT ) );
			}
			public function closeAll():void
			{
				tDati.reset();
				tDCE.reset();
				pdt.reset();
				farmaci.reset();
				discipline.reset();
				prestazioni.reset();
				if(curOpenBox!=null)
				{
					curOpenBox.resetBtn();
					closeBox( curOpenBox );
				}
			}
			public function clickApplica():void
			{
				var items:Array = new Array();
				items.push( tDati.list.selectedItems == null ? new Array() :  tDati.list.selectedItems );
				items.push( tDCE.list.selectedItems  == null ? new Array() :  tDCE.list.selectedItems );
				items.push( pdt.list.selectedItems  == null ? new Array() : pdt.list.selectedItems );
				items.push( farmaci.list.selectedItems  == null ? new Array() : farmaci.list.selectedItems );
				items.push( discipline.list.selectedItems == null ? new Array() : discipline.list.selectedItems );
				items.push( prestazioni.list.selectedItems == null ? new Array() : prestazioni.list.selectedItems );
				
				if(curOpenBox!=null)
				{
					curOpenBox.resetBtn();
					closeBox( curOpenBox );
				}
				
				this.dispatchEvent(new TLFilterEvent(TLFilterEvent.TLFILTER_EVENT,items)); 
				
			}
		]]>
	</mx:Script>
	
	<mx:VBox width="100%" height="100%" backgroundColor="{HTMLTabColor.WHITESMOKE}" 
		paddingBottom="4" paddingLeft="4" paddingRight="4" paddingTop="4">
		
		<mx:HBox width="100%" height="100%" >
			<mx:VBox width="100%" height="100%">
	 			<component:ResizableBoxFiltri  
							id="tDati"
							label="{lab_tipologie_dati}" 
							toggleEvent="onToggleEvent(event);" 
							multiSelection="true"
							listData="{list_tipologie_dati}"
							width="100%" 
						 	positionBegins="onPositionBegins(event);"/>
							 	
				<component:ResizableBoxFiltri  
							id="tDCE"
							label="{lab_tipologie_DCE}" 
							toggleEvent="onToggleEvent(event);" 
							multiSelection="true"
							listData="{list_tipologie_DCE}"
							width="100%" 
						 	positionBegins="onPositionBegins(event);"/>
							 	 
				
				<component:ResizableBoxFiltri  
							id="pdt"
							label="{lab_PDT}" 
							toggleEvent="onToggleEvent(event);" 
							multiSelection="true"
							listData="{list_PDT}"
							width="100%" 
						 	positionBegins="onPositionBegins(event);"/>
							 	
			
		 	</mx:VBox>
		 	 
		 	<mx:VBox width="100%" height="100%">
		 		<component:ResizableBoxFiltri  
							id="farmaci"
							label="{lab_farmaci}" 
							toggleEvent="onToggleEvent(event);" 
							multiSelection="true"
							listData="{list_farmaci}"
							width="100%" 
						 	positionBegins="onPositionBegins(event);"/>
							 	
		 			<component:ResizableBoxFiltri 
							id="discipline"
							label="{lab_discipline}" 
							toggleEvent="onToggleEvent(event);" 
							multiSelection="true"
							listData="{list_discipline}"
							width="100%" 
						 	positionBegins="onPositionBegins(event);"/>
								 	
					<component:ResizableBoxFiltri 
							id="prestazioni"
							label="{lab_prestazioni}" 
							toggleEvent="onToggleEvent(event);" 
							multiSelection="true"
							listData="{list_prestazione}"
							width="100%" 
						 	positionBegins="onPositionBegins(event);"/>
		 	</mx:VBox>
		 	 
		</mx:HBox>
	 	     	 	
		<mx:Spacer height="5"/>
		
		<mx:HBox width="100%" verticalAlign="middle" horizontalAlign="center">
			<mx:Button label="cancella" click="onClick(event)"/>			 	
			<!--<mx:Button label="applica" click="onClickApplica(event)"/>-->	
		</mx:HBox>
					 	
	</mx:VBox>
	
</mx:Canvas>
