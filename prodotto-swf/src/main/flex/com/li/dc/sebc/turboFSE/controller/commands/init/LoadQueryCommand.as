///////////////////////////////////////////////////////////
//  InitConfCommand.as
//  Macromedia ActionScript Implementation of the Class InitConfCommand
//  Generated by Enterprise Architect
//  Created on:      31-ago-2010 20:23:59
//  Original author: Marco Salonia
///////////////////////////////////////////////////////////

package com.li.dc.sebc.turboFSE.controller.commands.init
{
	import com.li.dc.sebc.turboFSE.model.ConstDataProxy;
	import com.li.dc.sebc.turboFSE.model.FSEModel;
	import com.li.dc.sebc.turboFSE.util.JSManager;
	
	import flash.utils.Dictionary;
	
	import it.lispa.siss.sebc.flex.collection.HashTable;
	import it.lispa.siss.sebc.flex.debug.Debug;
	import it.lispa.siss.sebc.flex.mvc.controller.Command;
	import it.lispa.siss.sebc.flex.mvc.controller.ISequenceReference;
	
	import mx.core.Application;
	 
	/**
	 * Lettura dei parametri query dell'url
	 * @author Marco Salonia
	 * @version 1.0
	 * @created 31-ago-2010 20:23:59
	 */
	public class LoadQueryCommand extends Command
	{
		private var reference:ISequenceReference;
		public function LoadQueryCommand(){
			super();
		}
	    /**
	     * @param event
	     */
		override public function execute( data : Object = null ): void
	    {
			if(data is ISequenceReference)
			{
				Debug.logDebug( "LoadQueryCommand.execute " );
				reference = data as ISequenceReference;
				// conservo il riferimento all'applicazione
				FSEModel.getInstance().turboApp	 	=	reference.getData() as Application;
				// creo un dizionario di chiave/valore dei paramtri passati con la url  
				FSEModel.getInstance().queryParams 	= getUrlParams();
				FSEModel.getInstance().hashTable	= new HashTable();	
				//FSEModel.getInstance().retrieveProxy(ConstDataProxy.DATA_MESSAGE).update( "Attendere prego... In attesa di configurazione" );
				reference.nextCommand(  );		
			}	
	    }
	    private function getUrlParams():Dictionary
		{
			var dict:Dictionary = new Dictionary();
			var ext:String = JSManager.getInstance().getUrlParams();	
			if(ext != null && ext.indexOf("=") >= 1)
			{
				var prms:Array = ext.split("&");
				for(var i:uint = 0;i<prms.length;i++)
				{
					var split:Array = prms[i].split("=");
					if(split.length>1)
					{
						var k:String = split[0];
						var v:String = split[1];
						dict[k] 	 = v;
					}
				}
			}
			return dict;
		}
	}//end InitConfCommand
}